{"version":3,"sources":["../lib/index.js"],"names":["decode","require","myMarked","setOptions","renderer","Renderer","pedantic","gfm","tables","breaks","sanitize","smartLists","smartypants","xhtml","argvs","process","argv","splice","length","validateArgs","console","error","join","exit","path","destiny","fs","readdir","err","items","forEach","file","item","readFile","data","newData","writeFile","replace","enconding","flag","log"],"mappings":";;;;AAEA;;;;;;AAEA,IAAIA,SAASC,QAAQ,UAAR,CAAb;;AAEA;AACA,IAAIC,WAAWD,QAAQ,QAAR,CAAf;;AAEA;AACA;AACAC,SAASC,UAAT,CAAoB;AAClBC,cAAU,IAAIF,SAASG,QAAb,EADQ;AAElBC,cAAU,KAFQ;AAGlBC,SAAK,IAHa;AAIlBC,YAAQ,IAJU;AAKlBC,YAAQ,KALU;AAMlBC,cAAU,KANQ;AAOlBC,gBAAY,IAPM;AAQlBC,iBAAa,KARK;AASlBC,WAAO;AATW,CAApB;;AAYA,IAAMC,QAAQC,QAAQC,IAAR,CAAaC,MAAb,CAAoB,CAApB,EAAuBF,QAAQC,IAAR,CAAaE,MAAb,GAAsB,CAA7C,CAAd;;AAEA,IAAMC,eAAe,SAAfA,YAAe,QAAS;AAC1B,QAAIL,MAAMI,MAAN,GAAe,CAAnB,EAAsB;AAClBE,gBAAQC,KAAR,CAAc,8CAA8CP,MAAMQ,IAAN,CAAW,GAAX,CAA5D;AACAP,gBAAQQ,IAAR,CAAa,CAAC,CAAd;AACH;AACD,WAAOT,KAAP;AACH,CAND;;AAQAK,aAAaL,KAAb;;4BAEwBA,K;IAAjBU,I;IAAMC,O;;AAEbC,aAAGC,OAAH,CAAWH,IAAX,EAAiB,UAAUI,GAAV,EAAeC,KAAf,EAAsB;AACnCA,UAAMC,OAAN,CAAc,gBAAQ;;AAElB,YAAIC,OAAOP,OAAO,GAAP,GAAaQ,IAAxB;;AAEAN,qBAAGO,QAAH,CAAYF,IAAZ,EAAkB,OAAlB,EAA2B,UAAUH,GAAV,EAAeM,IAAf,EAAqB;AAC5C,gBAAIN,GAAJ,EAAS,MAAMA,GAAN;;AAEV;AACD;AACE,gBAAIO,UAAUnC,OAAOE,SAASgC,IAAT,CAAP,CAAd;;AAEAR,yBAAGU,SAAH,CAAa,iCAAb,EAAgDD,QAAQE,OAAR,CAAgB,OAAhB,EAAyB,WAAzB,CAAhD,EAAuF,EAAEC,WAAW,OAAb,EAAsBC,MAAM,IAA5B,EAAvF,EAA2H,UAAUX,GAAV,EAAe;AACtI,oBAAIA,GAAJ,EAAS,MAAMA,GAAN;AACTR,wBAAQoB,GAAR,CAAY,gBAAZ;AACH,aAHD;AAKH,SAZD;AAaH,KAjBD;AAkBH,CAnBD","file":"index.js","sourcesContent":["\n\nimport fs from \"fs\";\n\nvar decode = require('unescape');\n\n// Create reference instance\nvar myMarked = require('marked');\n\n// Set options\n// `highlight` example uses `highlight.js`\nmyMarked.setOptions({\n  renderer: new myMarked.Renderer(),  \n  pedantic: false,\n  gfm: true,\n  tables: true,\n  breaks: false,\n  sanitize: false,\n  smartLists: true,\n  smartypants: false,\n  xhtml: true\n});\n\nconst argvs = process.argv.splice(2, process.argv.length - 1);\n\nconst validateArgs = argvs => {\n    if (argvs.length < 2) {\n        console.error(\"It is expected [path] [destiny]. Received\" + argvs.join(' '));\n        process.exit(-1);\n    }\n    return argvs;\n}\n\nvalidateArgs(argvs);\n\nconst [path, destiny] = argvs;\n\nfs.readdir(path, function (err, items) {\n    items.forEach(item => {\n\n        let file = path + '/' + item;\n\n        fs.readFile(file, 'utf-8', function (err, data) {\n            if (err) throw err;\n\n           // let input = `${data}`;\n          // console.log(escape(data));\n            let newData = decode(myMarked(data));\n            \n            fs.writeFile('./markdown/super-conversor.html', newData.replace('class', 'className'), { enconding: 'utf-8', flag: 'w+' }, function (err) {\n                if (err) throw err;\n                console.log('Arquivo salvo!');\n            });\n            \n        });\n    });\n});\n"]}